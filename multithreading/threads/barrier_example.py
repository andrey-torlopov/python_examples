import time
import threading
import random


def barrier_func(barrier):
    slp = random.randint(3, 7)
    time.sleep(slp)
    print(f'üî¥ –ü–æ—Ç–æ–∫ {threading.current_thread().name} >> –≤ {time.ctime()}')
    # –ü–æ–∫–∞ –≤—Å–µ –ø–æ—Ç–æ–∫–∏ –Ω–µ –¥–æ–π–¥—É—Ç –¥–æ —ç—Ç–æ–π —Å—Ç—Ä–æ—á–∫–∏, –º—ã –Ω–µ –ø—Ä–æ–¥–æ–ª–∂–∏–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–¥–∞
    # –ò –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –±—É–¥—É—Ç –∂–¥–∞—Ç—å.
    # –ü–æ—Ç–æ–º –æ–Ω–∏ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ —Å–º–æ–≥—É—Ç –≤—ã–ø–æ–ª–Ω–∏—Ç—å –Ω–∏–∂–µ –∏–¥—É—â–∏–π –∫–æ–¥
    barrier.wait()
    print(f'üü¢ –ü–æ—Ç–æ–∫ {threading.current_thread().name} << –≤ {time.ctime()}')


def barrier_example():
    bar = threading.Barrier(6)
    for i in range(6):
        threading.Thread(target=barrier_func, args=(bar,), name=f'thr-{i}').start()


if __name__ == '__main__':
    barrier_example()
